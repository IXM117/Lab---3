using System;
using System.Collections.Generic;
using System.Linq;

public abstract class Cliente
{
    public string Nombre { get; set; }
    public string Correo { get; set; }
    public string Telefono { get; set; }

    public Cliente(string nombre, string correo, string telefono)
    {
        Nombre = nombre;
        Correo = correo;
        Telefono = telefono;
    }

    public abstract double ObtenerDescuento();
}

public class ClienteRegular : Cliente
{
    public ClienteRegular(string nombre, string correo, string telefono) : base(nombre, correo, telefono) { }

    public override double ObtenerDescuento()
    {
        return 0;
    }
}

public class ClienteVIP : Cliente
{
    public ClienteVIP(string nombre, string correo, string telefono) : base(nombre, correo, telefono) { }

    public override double ObtenerDescuento()
    {
        return 0.1; 
    }
}

public class Plato
{
    public string Nombre { get; set; }
    public double Precio { get; set; }

    public Plato(string nombre, double precio)
    {
        Nombre = nombre;
        Precio = precio;
    }
}

public class Reserva
{
    public int Numero { get; set; }
    public DateTime Fecha { get; set; }
    public TimeSpan Hora { get; set; }
    public Cliente Cliente { get; set; }
    public List<Plato> Platos { get; set; }

    public Reserva(int numero, DateTime fecha, TimeSpan hora, Cliente cliente)
    {
        Numero = numero;
        Fecha = fecha;
        Hora = hora;
        Cliente = cliente;
        Platos = new List<Plato>();
    }

    public double CalcularTotal()
    {
        double total = 0;
        foreach (var plato in Platos)
        {
            total += plato.Precio;
        }
        return total * (1 - Cliente.ObtenerDescuento());
    }
}
class Program
{
    static List<Cliente> clientes = new List<Cliente>();
    static List<Reserva> reservas = new List<Reserva>();

    static void RegistrarClienteRegular()
    {
        Console.Clear();
        Console.Write("Nombre: ");
        string nombre = Console.ReadLine();
        Console.Write("Correo: ");
        string correo = Console.ReadLine();
        Console.Write("Teléfono: ");
        string telefono = Console.ReadLine();

        Cliente cliente = new ClienteRegular(nombre, correo, telefono);
        clientes.Add(cliente);
        Console.WriteLine("Cliente Regular registrado exitosamente.");
    }

    static void RegistrarClienteVIP()
    {
        Console.Clear();
        Console.Write("Nombre: ");
        string nombre = Console.ReadLine();
        Console.Write("Correo: ");
        string correo = Console.ReadLine();
        Console.Write("Teléfono: ");
        string telefono = Console.ReadLine();

        Cliente cliente = new ClienteVIP(nombre, correo, telefono);
        clientes.Add(cliente);
        Console.WriteLine("Cliente VIP registrado exitosamente.");
    }

    static void RegistrarReserva()
    {
        Console.Clear();
        Console.Write("Número de Reserva: ");
        int numero = int.Parse(Console.ReadLine());
        Console.Write("Fecha (yyyy-mm-dd): ");
        DateTime fecha = DateTime.Parse(Console.ReadLine());
        Console.Write("Hora (hh:mm): ");
        TimeSpan hora = TimeSpan.Parse(Console.ReadLine());
        Console.Write("Nombre del Cliente: ");
        string nombreCliente = Console.ReadLine();

        Cliente cliente = clientes.Find(c => c.Nombre == nombreCliente);
        if (cliente == null)
        {
            Console.WriteLine("Cliente no encontrado.");
            return;
        }

        Reserva reserva = new Reserva(numero, fecha, hora, cliente);
        bool agregarPlatos = true;
        while (agregarPlatos)
        {
            Console.Write("Nombre del Plato: ");
            string nombrePlato = Console.ReadLine();
            Console.Write("Precio del Plato: ");
            double precioPlato = double.Parse(Console.ReadLine());

            reserva.Platos.Add(new Plato(nombrePlato, precioPlato));

            Console.Write("¿Desea agregar otro plato? (s/n): ");
            agregarPlatos = Console.ReadLine().ToLower() == "s";
        }

        reservas.Add(reserva);
        Console.WriteLine("Reserva registrada exitosamente.");
    }

    static void MostrarDetallesClientes()
    {
        Console.Clear();
        Console.WriteLine("Clientes registrados:");
        foreach (var cliente in clientes)
        {
            Console.WriteLine($"Nombre: {cliente.Nombre}, Correo: {cliente.Correo}, Teléfono: {cliente.Telefono}");
        }
    }

    static void MostrarDetallesReservas()
    {
        Console.Clear();
        Console.WriteLine("Reservas registradas:");
        foreach (var reserva in reservas)
        {
            Console.WriteLine($"Número: {reserva.Numero}, Fecha: {reserva.Fecha}, Hora: {reserva.Hora}, Cliente: {reserva.Cliente.Nombre}, Total: {reserva.CalcularTotal()}");
        }
    }

    static void BuscarCliente()
    {
        Console.Clear();
        Console.Write("Nombre del Cliente: ");
        string nombre = Console.ReadLine();
        var cliente = clientes.Find(c => c.Nombre == nombre);
        if (cliente != null)
        {
            Console.WriteLine($"Cliente encontrado: Nombre: {cliente.Nombre}, Correo: {cliente.Correo}, Teléfono: {cliente.Telefono}");
        }
        else
        {
            Console.WriteLine("Cliente no encontrado.");
        }
    }

    static void BuscarReserva()
    {
        Console.Clear();
        Console.Write("Número de Reserva: ");
        int numero = int.Parse(Console.ReadLine());
        var reserva = reservas.Find(r => r.Numero == numero);
        if (reserva != null)
        {
            Console.WriteLine($"Reserva encontrada: Número: {reserva.Numero}, Fecha: {reserva.Fecha}, Hora: {reserva.Hora}, Cliente: {reserva.Cliente.Nombre}, Total: {reserva.CalcularTotal()}");
        }
        else
        {
            Console.WriteLine("Reserva no encontrada.");
        }
    }

    static void Main(string[] args)
    {
        bool salir = false;
        while (!salir)
        {
            Console.Clear();
            Console.WriteLine("Menú Principal:");
            Console.WriteLine("|1| Registrar Cliente Regular");
            Console.WriteLine("|2| Registrar Cliente VIP");
            Console.WriteLine("|3| Registrar Reserva");
            Console.WriteLine("|4| Mostrar Detalles de Clientes");
            Console.WriteLine("|5| Mostrar Detalles de Reservas");
            Console.WriteLine("|6| Buscar Cliente por Nombre");
            Console.WriteLine("|7| Buscar Reserva por Número");
            Console.WriteLine("|8| Salir");
            Console.Write("Seleccione una opción: ");
            string opcion = Console.ReadLine();

            try
            {
                switch (opcion)
                {
                    case "1":
                        RegistrarClienteRegular();
                        break;
                    case "2":
                        RegistrarClienteVIP();
                        break;
                    case "3":
                        RegistrarReserva();
                        break;
                    case "4":
                        MostrarDetallesClientes();
                        break;
                    case "5":
                        MostrarDetallesReservas();
                        break;
                    case "6":
                        BuscarCliente();
                        break;
                    case "7":
                        BuscarReserva();
                        break;
                    case "8":
                        salir = true;
                        break;
                    default:
                        Console.WriteLine("Opción no válida. Intente de nuevo.");
                        break;
                }
            }
            catch (FormatException ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
            catch (OverflowException ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }

            if (!salir)
            {
                Console.WriteLine("Presione cualquier tecla para continuar...");
                Console.ReadKey();
            }
        }
    }
}