## Descripción del Proyecto (B)

Este proyecto es una aplicación de consola en C# que gestiona un sistema de reservas para un restaurante. Permite registrar clientes, crear reservas y calcular totales con descuentos basados en el tipo de cliente (Regular o VIP).

## Estructura del Código

### Clases Principales

1. **Cliente (abstract)**: Clase base para los clientes.
   - Propiedades:
     - `Nombre`: Nombre del cliente.
     - `Correo`: Correo electrónico del cliente.
     - `Telefono`: Número de teléfono del cliente.
   - Método abstracto:
     - `ObtenerDescuento()`: Devuelve el descuento aplicable.

2. **ClienteRegular**: Hereda de `Cliente`. 
   - Implementa `ObtenerDescuento()` devolviendo 0 (sin descuento).

3. **ClienteVIP**: Hereda de `Cliente`.
   - Implementa `ObtenerDescuento()` devolviendo 0.1 (10% de descuento).

4. **Plato**: Representa un plato del menú.
   - Propiedades:
     - `Nombre`: Nombre del plato.
     - `Precio`: Precio del plato.

5. **Reserva**: Representa una reserva en el restaurante.
   - Propiedades:
     - `Numero`: Número de la reserva.
     - `Fecha`: Fecha de la reserva.
     - `Hora`: Hora de la reserva.
     - `Cliente`: Cliente asociado a la reserva.
     - `Platos`: Lista de platos seleccionados.
   - Método:
     - `CalcularTotal()`: Calcula el total de la reserva aplicando el descuento correspondiente.

### Funcionalidades

- **Registrar Cliente Regular**: Permite registrar un cliente regular.
- **Registrar Cliente VIP**: Permite registrar un cliente VIP.
- **Registrar Reserva**: Permite crear una nueva reserva, asociando un cliente y añadiendo platos.
- **Mostrar Detalles de Clientes**: Muestra la lista de clientes registrados.
- **Mostrar Detalles de Reservas**: Muestra la lista de reservas registradas.
- **Buscar Cliente por Nombre**: Busca y muestra los detalles de un cliente específico.
- **Buscar Reserva por Número**: Busca y muestra los detalles de una reserva específica.

### Manejo de Errores

El programa incluye manejo de excepciones para errores comunes, como:
- Formatos incorrectos en la entrada de datos.
- Números fuera del rango permitido.

## Requisitos

- .NET SDK (versión compatible con C#)
- Un entorno de desarrollo (como Visual Studio o Visual Studio Code)

## Ejecución

1. Clona o descarga el repositorio.
2. Abre el proyecto en tu entorno de desarrollo.
3. Compila y ejecuta el programa.
4. Sigue las instrucciones en pantalla para interactuar con el sistema.

## Contribuciones

Si deseas contribuir a este proyecto, por favor abre un issue o envía un pull request con tus sugerencias o mejoras.

## Licencia

Este proyecto está bajo la Licencia MIT. Consulta el archivo LICENSE para más detalles.
